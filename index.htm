<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trang web nhập liệu</title>
    <!-- Tải Tailwind CSS để tạo kiểu dáng hiện đại -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Sử dụng phông chữ Inter từ Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        /* Hiệu ứng mượt mà khi hover */
        .input-group:hover .input-label {
            color: #4f46e5;
        }
        .input-group:hover .input-field {
            border-color: #4f46e5;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center min-h-screen p-4">

    <!-- Container chính cho nội dung trang web -->
    <div class="bg-white p-8 md:p-12 rounded-3xl shadow-2xl w-full max-w-4xl text-center backdrop-blur-sm bg-white/70">
        <!-- Tiêu đề trang web -->
        <h1 class="text-3xl md:text-4xl font-bold text-gray-800 mb-2">Trang web nhập liệu</h1>
        <p class="text-gray-600 mb-8">
            Vui lòng điền thông tin vào ba ô bất kỳ trong mỗi hàng. Ô còn lại sẽ tự động tính toán để tổng bằng 0.
            Bạn có thể thêm tối đa 15 hàng nhập liệu.
        </p>

        <!-- Container chứa các hàng nhập liệu -->
        <div id="inputRowsContainer">
            <!-- Hàng nhập liệu ban đầu -->
            <form class="input-row flex flex-col md:flex-row gap-4 mb-4">
                <div class="flex-1 input-group transition duration-300">
                    <label class="input-label block text-left text-sm font-medium text-gray-700 mb-1 transition duration-300">Ô nhập liệu 1</label>
                    <input type="number" class="input-field w-full p-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300" placeholder="Nhập vào đây">
                </div>
                <div class="flex-1 input-group transition duration-300">
                    <label class="input-label block text-left text-sm font-medium text-gray-700 mb-1 transition duration-300">Ô nhập liệu 2</label>
                    <input type="number" class="input-field w-full p-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300" placeholder="Nhập vào đây">
                </div>
                <div class="flex-1 input-group transition duration-300">
                    <label class="input-label block text-left text-sm font-medium text-gray-700 mb-1 transition duration-300">Ô nhập liệu 3</label>
                    <input type="number" class="input-field w-full p-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300" placeholder="Nhập vào đây">
                </div>
                <div class="flex-1 input-group transition duration-300">
                    <label class="input-label block text-left text-sm font-medium text-gray-700 mb-1 transition duration-300">Ô nhập liệu 4</label>
                    <input type="number" class="input-field w-full p-3 border border-gray-300 rounded-xl bg-gray-200 text-gray-500 transition duration-300" placeholder="Giá trị tự động" readonly>
                </div>
            </form>
        </div>

        <!-- Nút thêm hàng mới -->
        <div class="mt-4">
            <button type="button" id="addRowButton" class="w-full py-3 px-6 bg-green-600 text-white font-semibold rounded-xl shadow-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition duration-300 transform hover:scale-105">
                Thêm hàng mới
            </button>
        </div>

        <!-- Vùng hiển thị kết quả -->
        <div id="result" class="mt-8 p-6 bg-slate-50 rounded-xl border border-dashed border-gray-300 hidden text-left shadow-inner">
            <h2 class="text-xl font-bold mb-3 text-gray-800">Kết quả:</h2>
            <p class="text-gray-700" id="resultText"></p>
        </div>
    </div>

    <script>
        const inputRowsContainer = document.getElementById('inputRowsContainer');
        const addRowButton = document.getElementById('addRowButton');
        const submitButton = document.getElementById('submitButton');
        const resultDiv = document.getElementById('result');
        const resultText = document.getElementById('resultText');
        const MAX_ROWS = 15; // Đặt giới hạn tối đa 15 hàng

        // Hàm để xử lý logic tính toán cho một hàng
        function setupRowLogic(row) {
            const inputs = row.querySelectorAll('input[type="number"]');

            inputs.forEach(input => {
                input.addEventListener('input', () => {
                    if (input.value === '') {
                        return;
                    }

                    let filledCount = 0;
                    let sum = 0;
                    let lastEmptyInput = null;

                    inputs.forEach(item => {
                        const value = parseFloat(item.value);
                        if (!isNaN(value)) {
                            sum += value;
                            filledCount++;
                        } else if (item.value === '' && lastEmptyInput === null) {
                            lastEmptyInput = item;
                        }
                    });

                    if (filledCount === 3 && lastEmptyInput) {
                        const remainingValue = -sum;
                        lastEmptyInput.value = remainingValue;
                    }
                });
            });
        }

        // Tạo logic cho hàng ban đầu
        const initialRow = inputRowsContainer.querySelector('.input-row');
        setupRowLogic(initialRow);

        // Hàm kiểm tra giới hạn hàng và ẩn/hiện nút
        function checkRowLimit() {
            const currentRows = inputRowsContainer.querySelectorAll('.input-row').length;
            if (currentRows >= MAX_ROWS) {
                addRowButton.style.display = 'none';
            } else {
                addRowButton.style.display = 'block';
            }
        }

        // Lắng nghe sự kiện click vào nút "Thêm hàng mới"
        addRowButton.addEventListener('click', () => {
            const newRow = initialRow.cloneNode(true);

            const newInputs = newRow.querySelectorAll('input[type="number"]');
            newInputs.forEach(input => {
                input.value = '';
                input.classList.remove('bg-gray-200', 'text-gray-500');
                if (input.readOnly) {
                    input.classList.add('bg-gray-200', 'text-gray-500');
                }
            });

            setupRowLogic(newRow);
            inputRowsContainer.appendChild(newRow);
            checkRowLimit();
        });

        // Lắng nghe sự kiện click vào nút "Gửi"
        submitButton.addEventListener('click', () => {
            let allResults = '';
            const allRows = inputRowsContainer.querySelectorAll('.input-row');
            
            allRows.forEach((row, index) => {
                const inputs = row.querySelectorAll('input[type="number"]');
                const values = Array.from(inputs).map(input => input.value);
                
                allResults += `
                    <p class="font-bold mt-4">Hàng ${index + 1}:</p>
                    <p><strong>Ô 1:</strong> ${values[0]}</p>
                    <p><strong>Ô 2:</strong> ${values[1]}</p>
                    <p><strong>Ô 3:</strong> ${values[2]}</p>
                    <p><strong>Ô 4:</strong> ${values[3]}</p>
                `;
            });
            
            resultText.innerHTML = allResults;
            resultDiv.classList.remove('hidden');
        });

        // Kiểm tra giới hạn hàng khi trang tải lần đầu
        checkRowLimit();
    </script>

</body>
</html>
